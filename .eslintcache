[{"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\index.js":"1","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\App.js":"2","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reportWebVitals.js":"3","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\CustomCamera.js":"4","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\Stats.js":"5","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\OrbitControls.js":"6","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\libs\\THREEx.FullScreen.js":"7","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\libs\\THREEx.windowresize.js":"8","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\DatGuiContext.js":"9","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\MathUtils.js":"10","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\solid-materials.js":"11","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\color-explorer.js":"12","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\hello-world.js":"13","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\wireframe.js":"14","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\helpers.js":"15","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\outline.js":"16","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\dashed-lines.js":"17","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\shapes.js":"18","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\extrusion.js":"19","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\vertex-colors.js":"20","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\text-3d.js":"21","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\textures\\textures.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":2057,"mtime":1615315253718,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":630,"mtime":1615313126003,"results":"27","hashOfConfig":"24"},{"size":513,"mtime":1615312928761,"results":"28","hashOfConfig":"24"},{"size":605,"mtime":1615313822829,"results":"29","hashOfConfig":"24"},{"size":3257,"mtime":1612387128778,"results":"30","hashOfConfig":"24"},{"size":1535,"mtime":1612909549917,"results":"31","hashOfConfig":"24"},{"size":81,"mtime":1612730468929,"results":"32","hashOfConfig":"24"},{"size":134,"mtime":1614551716088,"results":"33","hashOfConfig":"24"},{"size":3743,"mtime":1615308483802,"results":"34","hashOfConfig":"24"},{"size":7557,"mtime":1615308491412,"results":"35","hashOfConfig":"24"},{"size":2590,"mtime":1615308529119,"results":"36","hashOfConfig":"24"},{"size":3323,"mtime":1615313015555,"results":"37","hashOfConfig":"24"},{"size":2953,"mtime":1615308538882,"results":"38","hashOfConfig":"24"},{"size":2695,"mtime":1615308548239,"results":"39","hashOfConfig":"24"},{"size":3112,"mtime":1615308505276,"results":"40","hashOfConfig":"24"},{"size":7418,"mtime":1615312833414,"results":"41","hashOfConfig":"24"},{"size":4014,"mtime":1615319565486,"results":"42","hashOfConfig":"24"},{"size":7071,"mtime":1615313043389,"results":"43","hashOfConfig":"24"},{"size":3654,"mtime":1615319528274,"results":"44","hashOfConfig":"24"},{"size":5666,"mtime":1615319258480,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"rqskcl",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\index.js",[],["96","97"],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\App.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reportWebVitals.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\CustomCamera.js",["98"],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\Stats.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\OrbitControls.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\libs\\THREEx.FullScreen.js",["99","100"],"// This THREEx helper makes it easy to handle the fullscreen API\r\n// * it hides the prefix for each browser\r\n// * it hides the little discrepencies of the various vendor API\r\n// * at the time of this writing (nov 2011) it is available in \r\n//   [firefox nightly](http://blog.pearce.org.nz/2011/11/firefoxs-html-full-screen-api-enabled.html),\r\n//   [webkit nightly](http://peter.sh/2011/01/javascript-full-screen-api-navigation-timing-and-repeating-css-gradients/) and\r\n//   [chrome stable](http://updates.html5rocks.com/2011/10/Let-Your-Content-Do-the-Talking-Fullscreen-API).\r\n\r\n// # Code\r\n\r\n/** @namespace */\r\nvar THREEx\t\t= THREEx \t\t|| {};\r\nTHREEx.FullScreen\t= THREEx.FullScreen\t|| {};\r\n\r\n/**\r\n * test if it is possible to have fullscreen\r\n * \r\n * @returns {Boolean} true if fullscreen API is available, false otherwise\r\n*/\r\nTHREEx.FullScreen.available\t= function()\r\n{\r\n\treturn this._hasWebkitFullScreen || this._hasMozFullScreen;\r\n}\r\n\r\n/**\r\n * test if fullscreen is currently activated\r\n * \r\n * @returns {Boolean} true if fullscreen is currently activated, false otherwise\r\n*/\r\nTHREEx.FullScreen.activated\t= function()\r\n{\r\n\tif( this._hasWebkitFullScreen ){\r\n\t\treturn document.webkitIsFullScreen;\r\n\t}else if( this._hasMozFullScreen ){\r\n\t\treturn document.mozFullScreen;\r\n\t}else{\r\n\t\tconsole.assert(false);\r\n\t}\r\n}\r\n\r\n/**\r\n * Request fullscreen on a given element\r\n * @param {DomElement} element to make fullscreen. optional. default to document.body\r\n*/\r\nTHREEx.FullScreen.request\t= function(element)\r\n{\r\n\telement\t= element\t|| document.body;\r\n\tif( this._hasWebkitFullScreen ){\r\n\t\telement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\r\n\t}else if( this._hasMozFullScreen ){\r\n\t\telement.mozRequestFullScreen();\r\n\t}else{\r\n\t\tconsole.assert(false);\r\n\t}\r\n}\r\n\r\n/**\r\n * Cancel fullscreen\r\n*/\r\nTHREEx.FullScreen.cancel\t= function()\r\n{\r\n\tif( this._hasWebkitFullScreen ){\r\n\t\tdocument.webkitCancelFullScreen();\r\n\t}else if( this._hasMozFullScreen ){\r\n\t\tdocument.mozCancelFullScreen();\r\n\t}else{\r\n\t\tconsole.assert(false);\r\n\t}\r\n}\r\n\r\n// internal functions to know which fullscreen API implementation is available\r\nTHREEx.FullScreen._hasWebkitFullScreen\t= 'webkitCancelFullScreen' in document\t? true : false;\t\r\nTHREEx.FullScreen._hasMozFullScreen\t= 'mozCancelFullScreen' in document\t? true : false;\t\r\n\r\n/**\r\n * Bind a key to renderer screenshot\r\n * usage: THREEx.FullScreen.bindKey({ charCode : 'a'.charCodeAt(0) }); \r\n*/\r\nTHREEx.FullScreen.bindKey\t= function(opts){\r\n\topts\t\t= opts\t\t|| {};\r\n\tvar charCode\t= opts.charCode\t|| 'f'.charCodeAt(0);\r\n\tvar dblclick\t= opts.dblclick !== undefined ? opts.dblclick : false;\r\n\tvar element\t= opts.element\r\n\r\n\tvar toggle\t= function(){\r\n\t\tif( THREEx.FullScreen.activated() ){\r\n\t\t\tTHREEx.FullScreen.cancel();\r\n\t\t}else{\r\n\t\t\tTHREEx.FullScreen.request(element);\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tvar onKeyPress\t= function(event){\r\n\t\tif( event.which !== charCode )\treturn;\r\n\t\ttoggle();\r\n\t}.bind(this);\r\n\r\n\tdocument.addEventListener('keypress', onKeyPress, false);\r\n\r\n\tdblclick && document.addEventListener('dblclick', toggle, false);\r\n\r\n\treturn {\r\n\t\tunbind\t: function(){\r\n\t\t\tdocument.removeEventListener('keypress', onKeyPress, false);\r\n\t\t\tdblclick && document.removeEventListener('dblclick', toggle, false);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default THREEx.FullScreen;","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\libs\\THREEx.windowresize.js",["101"],"// This THREEx helper makes it easy to handle window resize.\r\n// It will update renderer and camera when window is resized.\r\n//\r\n// # Usage\r\n//\r\n// **Step 1**: Start updating renderer and camera\r\n//\r\n// ```var windowResize = new THREEx.WindowResize(aRenderer, aCamera)```\r\n//    \r\n// **Step 2**: stop updating renderer and camera\r\n//\r\n// ```windowResize.destroy()```\r\n// # Code\r\n\r\n//\r\n\r\n/** @namespace */\r\nvar THREEx\t= THREEx || {}\r\n\r\n/**\r\n * Update renderer and camera when the window is resized\r\n * \r\n * @param {Object} renderer the renderer to update\r\n * @param {Object} Camera the camera to update\r\n * @param {Function} dimension callback for renderer size\r\n*/\r\nTHREEx.WindowResize\t= function(renderer, camera, dimension){\r\n\tdimension \t= dimension || function(){ return { width: window.innerWidth, height: window.innerHeight } }\r\n\tvar callback\t= function(){\r\n\t\t// fetch target renderer size\r\n\t\tvar rendererSize = dimension();\r\n\t\t// notify the renderer of the size change\r\n\t\trenderer.setSize( rendererSize.width, rendererSize.height )\r\n\t\t// update the camera\r\n\t\tcamera.aspect\t= rendererSize.width / rendererSize.height\r\n\t\tcamera.updateProjectionMatrix()\r\n\t}\r\n\t// bind the resize event\r\n\twindow.addEventListener('resize', callback, false)\r\n\t// return .stop() the function to stop watching window resize\r\n\treturn {\r\n\t\ttrigger\t: function(){\r\n\t\t\tcallback()\r\n\t\t},\r\n\t\t/**\r\n\t\t * Stop watching window resize\r\n\t\t*/\r\n\t\tdestroy\t: function(){\r\n\t\t\twindow.removeEventListener('resize', callback)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default THREEx.WindowResize;","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\DatGuiContext.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\reusable\\MathUtils.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\solid-materials.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\color-explorer.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\hello-world.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\wireframe.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\helpers.js",["102","103","104","105"],"import React, { Suspense, useEffect, useMemo, useRef } from 'react';\r\nimport * as THREE from 'three/src/Three';\r\nimport { Canvas, useThree } from 'react-three-fiber';\r\n\r\nimport MyCamera from '../../reusable/CustomCamera';\r\nimport Stats from '../../reusable/Stats';\r\nimport OrbitControls from '../../reusable/OrbitControls';\r\n\r\nimport { BackSide, FogExp2 } from \"three\";\r\n\r\nfunction CameraWrapper() {\r\n    const { scene } = useThree();\r\n\r\n    const OnCameraInit = (cam) => {\r\n        cam.position.set(0, 150, 400);\r\n        cam.lookAt(scene.position);\r\n\r\n        scene.fog = new FogExp2(0x9999ff, 0.00025);\r\n    };\r\n\r\n    return (\r\n        <MyCamera OnCameraInit={OnCameraInit} fov={45} near={0.01} far={20000}></MyCamera>\r\n    );\r\n}\r\n\r\nfunction Geometry() {\r\n    let [origin, terminus, direction] = useMemo(()=>{\r\n        let origin = new THREE.Vector3(50, 100, 50);\r\n        let terminus = new THREE.Vector3(75, 75, 75);\r\n        let direction = new THREE.Vector3().subVectors(terminus, origin).normalize();\r\n        return [origin, terminus, direction];\r\n    })\r\n    return (\r\n        <group>\r\n            <mesh position={[40, 40, 40]}>\r\n                <sphereGeometry args={[30, 32, 16]}></sphereGeometry>\r\n                <meshLambertMaterial color={0x000088}></meshLambertMaterial>\r\n            </mesh>\r\n\r\n            <axesHelper args={[50]} position={[40, 40, 40]}>\r\n            </axesHelper>\r\n\r\n            <gridHelper args={[200, 10, new THREE.Color(0x006600), new THREE.Color(0x006600)]} position={[100, 0, 100]}></gridHelper>\r\n            <gridHelper args={[200, 10, new THREE.Color(0x000066), new THREE.Color(0x000066)]} position={[100, 100, 0]} rotation={[Math.PI/2, 0, 0]}></gridHelper>\r\n            <gridHelper args={[200, 10, new THREE.Color(0x660000), new THREE.Color(0x660000)]} position={[0, 100, 100]} rotation={[0, 0, Math.PI/2]}></gridHelper>\r\n\r\n            <arrowHelper args={[direction, origin, 50, 0x884400]}></arrowHelper>\r\n\r\n\r\n            {/* Sky */}\r\n            <mesh>\r\n                <boxGeometry attach=\"geometry\" args={[10000, 10000, 10000]}></boxGeometry>\r\n                <meshBasicMaterial args={{ color: 0x9990ff, side: BackSide }}></meshBasicMaterial>\r\n            </mesh>\r\n\r\n            <axesHelper args={[100]}></axesHelper>\r\n        </group>\r\n    )\r\n}\r\n\r\nfunction Lights() {\r\n    return (\r\n        <group>\r\n            <pointLight position={[0, 250, 0]} args={[0xffffff]}></pointLight>\r\n            <ambientLight args={[0x111111]}></ambientLight>\r\n        </group>\r\n    );\r\n}\r\n\r\nfunction HelpersPage(props) {\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Canvas>\r\n                <CameraWrapper />\r\n                <OrbitControls />\r\n                <Lights></Lights>\r\n                <Suspense fallback={null}>\r\n                    <Geometry></Geometry>\r\n                </Suspense>\r\n                <Stats />\r\n            </Canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HelpersPage;\r\n","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\outline.js",["106","107","108"],"import React, { Suspense, useEffect, useMemo, useRef } from 'react';\r\nimport * as THREE from 'three/src/Three';\r\nimport { Canvas, useThree } from 'react-three-fiber';\r\n\r\nimport MyCamera from '../../reusable/CustomCamera';\r\nimport Stats from '../../reusable/Stats';\r\nimport OrbitControls from '../../reusable/OrbitControls';\r\n\r\nimport { BackSide, FogExp2 } from \"three\";\r\n\r\nfunction CameraWrapper() {\r\n    const { scene } = useThree();\r\n\r\n    const OnCameraInit = (cam) => {\r\n        cam.position.set(0, 150, 400);\r\n        cam.lookAt(scene.position);\r\n\r\n        scene.fog = new FogExp2(0x9999ff, 0.00025);\r\n    };\r\n\r\n    return (\r\n        <MyCamera OnCameraInit={OnCameraInit} fov={45} near={0.01} far={20000}></MyCamera>\r\n    );\r\n}\r\n\r\nfunction Geometry() {\r\n\r\n    return (\r\n        <group>\r\n            <mesh position={[-60, 55, 0]}>\r\n                <sphereGeometry args={[50, 32, 16]}></sphereGeometry>\r\n                <meshNormalMaterial></meshNormalMaterial>\r\n            </mesh>\r\n\r\n            <mesh position={[-60, 55, 0]} scale={[1.05, 1.05, 1.05]}>\r\n                <sphereGeometry args={[50, 32, 16]}></sphereGeometry>\r\n                <meshBasicMaterial color={0xff0000} side={THREE.BackSide}></meshBasicMaterial>\r\n            </mesh>\r\n\r\n            <mesh position={[60, 60, 0]}>\r\n                <boxGeometry args={[80, 80, 80]}></boxGeometry>\r\n                <meshNormalMaterial></meshNormalMaterial>\r\n            </mesh>\r\n\r\n            <mesh position={[60, 60, 0]} scale={[1.05, 1.05, 1.05]}>\r\n                <boxGeometry args={[80, 80, 80]}></boxGeometry>\r\n                <meshBasicMaterial color={0x00ff00} side={THREE.BackSide}></meshBasicMaterial>\r\n            </mesh>\r\n\r\n\r\n            {/* Sky */}\r\n            <mesh>\r\n                <boxGeometry attach=\"geometry\" args={[10000, 10000, 10000]}></boxGeometry>\r\n                <meshBasicMaterial args={{ color: 0x9990ff, side: BackSide }}></meshBasicMaterial>\r\n            </mesh>\r\n\r\n            <axesHelper args={[100]}></axesHelper>\r\n        </group>\r\n    )\r\n}\r\n\r\nfunction Lights() {\r\n    return (\r\n        <group>\r\n            <pointLight position={[0, 250, 0]} args={[0xffffff]}></pointLight>\r\n            <ambientLight args={[0x111111]}></ambientLight>\r\n        </group>\r\n    );\r\n}\r\n\r\nfunction OutlinePage(props) {\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Canvas>\r\n                <CameraWrapper />\r\n                <OrbitControls />\r\n                <Lights></Lights>\r\n                <Suspense fallback={null}>\r\n                    <Geometry></Geometry>\r\n                </Suspense>\r\n                <Stats />\r\n            </Canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlinePage;\r\n","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\dashed-lines.js",["109"],"import React, { Suspense, useEffect, useMemo, useRef } from 'react';\r\nimport * as THREE from 'three/src/Three';\r\nimport { Canvas, useThree } from 'react-three-fiber';\r\n\r\nimport MyCamera from '../../reusable/CustomCamera';\r\nimport Stats from '../../reusable/Stats';\r\nimport OrbitControls from '../../reusable/OrbitControls';\r\n\r\nimport { BackSide, FogExp2 } from \"three\";\r\n\r\nfunction CameraWrapper() {\r\n    const { scene } = useThree();\r\n\r\n    const OnCameraInit = (cam) => {\r\n        cam.position.set(0, 150, 400);\r\n        cam.lookAt(scene.position);\r\n\r\n        scene.fog = new FogExp2(0x9999ff, 0.00025);\r\n    };\r\n\r\n    return (\r\n        <MyCamera OnCameraInit={OnCameraInit} fov={45} near={0.01} far={20000}></MyCamera>\r\n    );\r\n}\r\n\r\nfunction Geometry() {\r\n    let lineRef = useRef();\r\n    let lineRef2 = useRef();\r\n\r\n    useEffect(() => {\r\n        lineRef.current.computeLineDistances();\r\n        lineRef2.current.computeLineDistances();\r\n    }, [lineRef, lineRef2]);\r\n\r\n    let [lineGeometry, lineMat, dashedLineGeometry, dashedLineMat] = useMemo(() => {\r\n        //Simple Line\r\n        let lineGeometry = new THREE.BufferGeometry();\r\n        const points = [\r\n            new THREE.Vector3(-150, -100, 0),\r\n            new THREE.Vector3(-150, 100, 0)\r\n        ];\r\n        lineGeometry.setFromPoints(points);\r\n\r\n        const lineMat = new THREE.LineBasicMaterial({ color: 0xcc0000 });\r\n\r\n        //Dotted Line\r\n        let dashedLineGeometry = new THREE.BufferGeometry();\r\n        const dashedLinePoints = [\r\n            new THREE.Vector3(-100, -100, 0),\r\n            new THREE.Vector3(-100, 100, 0)\r\n        ];\r\n        dashedLineGeometry.setFromPoints(dashedLinePoints);\r\n\r\n        const dashedLineMat = new THREE.LineDashedMaterial({ color: 0x00cc00, dashSize: 4, gapSize: 2, linewidth: 4 });\r\n\r\n        return [lineGeometry, lineMat, dashedLineGeometry, dashedLineMat];\r\n    });\r\n\r\n    return (\r\n        <group>\r\n            <line ref={lineRef} geometry={lineGeometry} material={lineMat}></line>\r\n            <line ref={lineRef2} geometry={dashedLineGeometry} material={dashedLineMat}></line>\r\n\r\n            {/* Sky */}\r\n            <mesh>\r\n                <boxGeometry attach=\"geometry\" args={[10000, 10000, 10000]}></boxGeometry>\r\n                <meshBasicMaterial args={{ color: 0x9990ff, side: BackSide }}></meshBasicMaterial>\r\n            </mesh>\r\n\r\n            <axesHelper args={[100]}></axesHelper>\r\n        </group>\r\n    )\r\n}\r\n\r\nfunction Lights() {\r\n    return (\r\n        <group>\r\n            <pointLight position={[0, 250, 0]} args={[0xffffff]}></pointLight>\r\n            <ambientLight args={[0x111111]}></ambientLight>\r\n        </group>\r\n    );\r\n}\r\n\r\nfunction DashedLinesPage(props) {\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Canvas>\r\n                <CameraWrapper />\r\n                <OrbitControls />\r\n                <Lights></Lights>\r\n                <Suspense fallback={null}>\r\n                    <Geometry></Geometry>\r\n                </Suspense>\r\n                <Stats />\r\n            </Canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashedLinesPage;\r\n","D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\shapes.js",[],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\extrusion.js",["110","111"],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\vertex-colors.js",["112","113"],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\basic-examples\\text-3d.js",["114","115","116","117"],"D:\\Learning\\Three.js\\React-three-fiber\\ludo-game\\src\\pages\\textures\\textures.js",["118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":15,"column":7,"nodeType":"126","endLine":15,"endColumn":42,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":12,"column":15,"nodeType":"130","messageId":"131","endLine":12,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":96,"column":4,"nodeType":"134","messageId":"135","endLine":96,"endColumn":8,"fix":"136"},{"ruleId":"128","severity":1,"message":"129","line":18,"column":14,"nodeType":"130","messageId":"131","endLine":18,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":1,"column":27,"nodeType":"130","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"140","line":1,"column":47,"nodeType":"130","messageId":"139","endLine":1,"endColumn":53},{"ruleId":"137","severity":1,"message":"141","line":27,"column":18,"nodeType":"130","messageId":"139","endLine":27,"endColumn":26},{"ruleId":"124","severity":1,"message":"142","line":27,"column":41,"nodeType":"130","endLine":27,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":1,"column":27,"nodeType":"130","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"143","line":1,"column":38,"nodeType":"130","messageId":"139","endLine":1,"endColumn":45},{"ruleId":"137","severity":1,"message":"140","line":1,"column":47,"nodeType":"130","messageId":"139","endLine":1,"endColumn":53},{"ruleId":"124","severity":1,"message":"142","line":35,"column":70,"nodeType":"130","endLine":35,"endColumn":77},{"ruleId":"137","severity":1,"message":"144","line":4,"column":10,"nodeType":"130","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"124","severity":1,"message":"145","line":67,"column":6,"nodeType":"126","endLine":67,"endColumn":49,"suggestions":"146"},{"ruleId":"124","severity":1,"message":"147","line":94,"column":8,"nodeType":"126","endLine":94,"endColumn":32,"suggestions":"148"},{"ruleId":"124","severity":1,"message":"147","line":132,"column":8,"nodeType":"126","endLine":132,"endColumn":15,"suggestions":"149"},{"ruleId":"137","severity":1,"message":"150","line":1,"column":55,"nodeType":"130","messageId":"139","endLine":1,"endColumn":63},{"ruleId":"124","severity":1,"message":"151","line":35,"column":11,"nodeType":"152","endLine":35,"endColumn":40},{"ruleId":"124","severity":1,"message":"153","line":52,"column":21,"nodeType":"154","endLine":52,"endColumn":92},{"ruleId":"124","severity":1,"message":"142","line":55,"column":19,"nodeType":"130","endLine":55,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":1,"column":27,"nodeType":"130","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"144","line":7,"column":10,"nodeType":"130","messageId":"139","endLine":7,"endColumn":20},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'OnCameraInit'. Either include it or remove the dependency array. If 'OnCameraInit' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["157"],"no-use-before-define","'THREEx' was used before it was defined.","Identifier","usedBeforeDefined","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"158","text":"159"},"no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useRef' is defined but never used.","'terminus' is assigned a value but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'useMemo' is defined but never used.","'SceneUtils' is defined but never used.","React Hook useEffect has a missing dependency: 'multiMaterial'. Either include it or remove the dependency array.",["160"],"React Hook useMemo has an unnecessary dependency: 'scene'. Either exclude it or remove the dependency array.",["161"],["162"],"'useState' is defined but never used.","The 'font' object construction makes the dependencies of useMemo Hook (at line 42) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'font' in its own useMemo() Hook.","VariableDeclarator","Assignments to the 'textWidth' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},[2888,2899],"",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [size, setDefaultCamera, near, far, OnCameraInit]",{"range":"171","text":"172"},"Update the dependencies array to be: [groupParent, starShape, extrusionSettings, multiMaterial]",{"range":"173","text":"174"},"Update the dependencies array to be: [props.nrOfFaces]",{"range":"175","text":"176"},"Update the dependencies array to be: []",{"range":"177","text":"178"},[513,548],"[size, setDefaultCamera, near, far, OnCameraInit]",[2247,2290],"[groupParent, starShape, extrusionSettings, multiMaterial]",[3483,3507],"[props.nrOfFaces]",[4942,4949],"[]"]